import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    ext {
        springBootVersion = '3.0.4'
        kotlinVersion = '1.7.22'
        kotlinLoggerVersion = '3.0.5'
        testContainersVersion = '1.19.0'
        testSpringmockkVersion = '4.0.2'
        mockkVersion = '1.13.5'
        guavaVersion = '32.1.3-jre'
        caffeineVersion = '3.1.8'
        awaitilityVersion = '4.2.0'
    }
    repositories {
        mavenCentral()
    }

    configurations.classpath {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'hours'
        }
    }
}

plugins {
    id "org.springframework.boot" version "$springBootVersion"
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.spring" version "$kotlinVersion"
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

group = 'com'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

bootJar.enabled = false
jar.enabled = true

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set("sources")
}

configurations {
    compile.exclude group: 'log4j'
    compile.exclude module: 'slf4j-log4j12'
    testCompile.exclude group: 'log4j'
    testCompile.exclude module: 'slf4j-log4j12'
}

dependencies {
    api "org.springframework.boot:spring-boot-starter-data-redis"
    api "org.springframework.boot:spring-boot-starter-cache"
    implementation "org.springframework.boot:spring-boot-autoconfigure"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"

    implementation "com.google.guava:guava:$guavaVersion"
    api "com.github.ben-manes.caffeine:caffeine:${caffeineVersion}"
    implementation "org.apache.commons:commons-pool2"
    implementation "io.github.microutils:kotlin-logging-jvm:$kotlinLoggerVersion"

    // tests
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
        exclude group: "org.mockito"
    }
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "com.ninja-squad:springmockk:$testSpringmockkVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "org.testcontainers:testcontainers:$testContainersVersion"
    testImplementation "org.awaitility:awaitility:$awaitilityVersion"
    testImplementation "org.awaitility:awaitility-kotlin:$awaitilityVersion"
}

publishing {
    publications {
        mavenArtifact(MavenPublication) {
            from components.java
            artifact sourceJar
        }
    }
    repositories {
        mavenCentral()
    }
}


tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += ["-Xjsr305=strict"]
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

